package yandex_coderun;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.List;

import java.util.stream.Collectors;

/*
–í–∞—Å—è –æ—á–µ–Ω—å –ª—é–±–∏—Ç –≤–µ–∑–¥–µ –∏—Å–∫–∞—Ç—å —Å–≤–æ—ë —Å—á–∞—Å—Ç–ª–∏–≤–æ–µ —á–∏—Å–ª–æ ùêæ
–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –æ–Ω —Ö–æ–¥–∏—Ç –≤ —à–∫–æ–ª—É –ø–æ —É–ª–∏—Ü–µ, –≤–¥–æ–ª—å –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–∏–ø–∞—Ä–∫–æ–≤–∞–Ω–æ N –º–∞—à–∏–Ω.
–û–Ω –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–ª—Å—è –≤–æ–ø—Ä–æ—Å–æ–º, —Å–∫–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ—Ç—Ä–µ–∑–∫–æ–≤ –∏–∑ –ø–æ–¥—Ä—è–¥ –∏–¥—É—â–∏—Ö –º–∞—à–∏–Ω —Ç–∞–∫–∏—Ö,
—á—Ç–æ —Å—É–º–º–∞ –∏—Ö –Ω–æ–º–µ—Ä–æ–≤ —Ä–∞–≤–Ω–∞ K. –ü–æ–º–æ–≥–∏—Ç–µ –í–∞—Å–µ —É–∑–Ω–∞—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –µ–≥–æ –≤–æ–ø—Ä–æ—Å.
 */
public class SumOfNumbers {

    public static void main(String[] args) {

        List<Integer> nAndKList;
        int n;
        int k;
        List<Integer> carsNumbersList;

        try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in))) {
            nAndKList = readList(reader);
            n = nAndKList.get(0);
            k = nAndKList.get(1);
            carsNumbersList = readList(reader);
        } catch (IOException exception) {
            throw new RuntimeException(exception);
        }

        int j = 0;
        int currentSum = 0;
        int counter = 0;

        for (int i = 0; i < carsNumbersList.size(); i++) {
            currentSum += carsNumbersList.get(i);

            while (currentSum > k && j <= i) {
                currentSum -= carsNumbersList.get(j);
                j++;
            }
            if (currentSum == k) {
                ++counter;
            }
        }

        System.out.println(counter);

    }

    private static List<Integer> readList(BufferedReader reader) throws IOException {
        return Arrays.stream(reader.readLine().strip().split(" "))
                .map(Integer::parseInt)
                .collect(Collectors.toList());
    }
}
